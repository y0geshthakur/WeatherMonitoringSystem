{"ast":null,"code":"var _jsxFileName = \"/Users/yogeshthakur/WeatherMonitoringSystem/frontend/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { fetchWeatherData } from './services/weatherService';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [weatherData, setWeatherData] = useState(null);\n  const [processedData, setProcessedData] = useState(null);\n  useEffect(() => {\n    async function getWeatherData() {\n      const data = await fetchWeatherData();\n      if (data) {\n        setWeatherData(data.weatherData);\n        setProcessedData(data.processedData);\n      }\n    }\n    getWeatherData();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Weather Monitoring System\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 13\n    }, this), processedData ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Processed Weather Data:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Average Temperature: \", processedData.averageTemperature, \"\\xB0C\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Max Temperature: \", processedData.maxTemperature, \"\\xB0C\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Min Temperature: \", processedData.minTemperature, \"\\xB0C\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Dominant Condition: \", processedData.dominantCondition]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Could not fetch weather data\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 9\n  }, this);\n}\n_s(App, \"ALzunCx4DxpoM/PH3e3pbnwynsY=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useState","fetchWeatherData","jsxDEV","_jsxDEV","App","_s","weatherData","setWeatherData","processedData","setProcessedData","getWeatherData","data","className","children","fileName","_jsxFileName","lineNumber","columnNumber","averageTemperature","maxTemperature","minTemperature","dominantCondition","_c","$RefreshReg$"],"sources":["/Users/yogeshthakur/WeatherMonitoringSystem/frontend/src/App.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { fetchWeatherData } from './services/weatherService';\nimport './App.css';\n\nfunction App() {\n    const [weatherData, setWeatherData] = useState(null);\n    const [processedData, setProcessedData] = useState(null);\n\n    useEffect(() => {\n        async function getWeatherData() {\n            const data = await fetchWeatherData();\n            if (data) {\n                setWeatherData(data.weatherData);\n                setProcessedData(data.processedData);\n            }\n        }\n        getWeatherData();\n    }, []);\n\n    return (\n        <div className=\"App\">\n            <h1>Weather Monitoring System</h1>\n            {processedData ? (\n                <div>\n                    <h2>Processed Weather Data:</h2>\n                    <p>Average Temperature: {processedData.averageTemperature}°C</p>\n                    <p>Max Temperature: {processedData.maxTemperature}°C</p>\n                    <p>Min Temperature: {processedData.minTemperature}°C</p>\n                    <p>Dominant Condition: {processedData.dominantCondition}</p>\n                </div>\n            ) : (\n                <p>Could not fetch weather data</p>\n            )}\n        </div>\n    );\n}\n\nexport default App;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,gBAAgB,QAAQ,2BAA2B;AAC5D,OAAO,WAAW;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnB,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACX,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGP,QAAQ,CAAC,IAAI,CAAC;EACpD,MAAM,CAACQ,aAAa,EAAEC,gBAAgB,CAAC,GAAGT,QAAQ,CAAC,IAAI,CAAC;EAExDD,SAAS,CAAC,MAAM;IACZ,eAAeW,cAAcA,CAAA,EAAG;MAC5B,MAAMC,IAAI,GAAG,MAAMV,gBAAgB,CAAC,CAAC;MACrC,IAAIU,IAAI,EAAE;QACNJ,cAAc,CAACI,IAAI,CAACL,WAAW,CAAC;QAChCG,gBAAgB,CAACE,IAAI,CAACH,aAAa,CAAC;MACxC;IACJ;IACAE,cAAc,CAAC,CAAC;EACpB,CAAC,EAAE,EAAE,CAAC;EAEN,oBACIP,OAAA;IAAKS,SAAS,EAAC,KAAK;IAAAC,QAAA,gBAChBV,OAAA;MAAAU,QAAA,EAAI;IAAyB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EACjCT,aAAa,gBACVL,OAAA;MAAAU,QAAA,gBACIV,OAAA;QAAAU,QAAA,EAAI;MAAuB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAChCd,OAAA;QAAAU,QAAA,GAAG,uBAAqB,EAACL,aAAa,CAACU,kBAAkB,EAAC,OAAE;MAAA;QAAAJ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC,eAChEd,OAAA;QAAAU,QAAA,GAAG,mBAAiB,EAACL,aAAa,CAACW,cAAc,EAAC,OAAE;MAAA;QAAAL,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC,eACxDd,OAAA;QAAAU,QAAA,GAAG,mBAAiB,EAACL,aAAa,CAACY,cAAc,EAAC,OAAE;MAAA;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC,eACxDd,OAAA;QAAAU,QAAA,GAAG,sBAAoB,EAACL,aAAa,CAACa,iBAAiB;MAAA;QAAAP,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC3D,CAAC,gBAENd,OAAA;MAAAU,QAAA,EAAG;IAA4B;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CACrC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACA,CAAC;AAEd;AAACZ,EAAA,CA/BQD,GAAG;AAAAkB,EAAA,GAAHlB,GAAG;AAiCZ,eAAeA,GAAG;AAAC,IAAAkB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}