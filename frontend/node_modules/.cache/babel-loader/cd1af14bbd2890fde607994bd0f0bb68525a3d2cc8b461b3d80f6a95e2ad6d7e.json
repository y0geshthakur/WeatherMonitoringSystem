{"ast":null,"code":"var _jsxFileName = \"/Users/yogeshthakur/WeatherMonitoringSystem/frontend/src/App.js\",\n  _s = $RefreshSig$();\n// src/App.js\n\nimport React, { useEffect, useState } from \"react\";\nimport { fetchWeatherData } from \"./services/weatherService\";\nimport \"./App.css\"; // You can style as needed\nimport \"./index.css\"; // You can style as needed\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [weatherData, setWeatherData] = useState(null);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    const getWeatherData = async () => {\n      try {\n        const data = await fetchWeatherData();\n        setWeatherData(data);\n      } catch (error) {\n        setError(\"Could not fetch weather data\");\n      }\n    };\n    getWeatherData();\n    const intervalId = setInterval(getWeatherData, 300000); // Fetch data every 5 minutes\n\n    return () => clearInterval(intervalId); // Cleanup on unmount\n  }, []);\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"error\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 16\n    }, this);\n  }\n  if (!weatherData) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 16\n    }, this);\n  }\n  const {\n    weatherData: citiesData,\n    processedData\n  } = weatherData;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Weather Monitoring System\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Current Weather\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: citiesData.map((city, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: city.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Main Condition: \", city.weather[0].description]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Current Temperature: \", Math.round(city.main.temp - 273.15), \" \\xB0C\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Feels Like: \", Math.round(city.main.feels_like - 273.15), \" \\xB0C\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 25\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Daily Summary\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Average Temperature: \", Math.round(processedData.averageTemperature), \" \\xB0C\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Max Temperature: \", Math.round(processedData.maxTemperature), \" \\xB0C\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Min Temperature: \", Math.round(processedData.minTemperature), \" \\xB0C\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Dominant Condition: \", processedData.dominantCondition]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 9\n  }, this);\n};\n_s(App, \"9qZc3hMYGZe2yPnJ+Iz9mpNmvKk=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useState","fetchWeatherData","jsxDEV","_jsxDEV","App","_s","weatherData","setWeatherData","error","setError","getWeatherData","data","intervalId","setInterval","clearInterval","className","children","fileName","_jsxFileName","lineNumber","columnNumber","citiesData","processedData","map","city","index","name","weather","description","Math","round","main","temp","feels_like","averageTemperature","maxTemperature","minTemperature","dominantCondition","_c","$RefreshReg$"],"sources":["/Users/yogeshthakur/WeatherMonitoringSystem/frontend/src/App.js"],"sourcesContent":["// src/App.js\n\nimport React, { useEffect, useState } from \"react\";\nimport { fetchWeatherData } from \"./services/weatherService\";\nimport \"./App.css\"; // You can style as needed\nimport \"./index.css\"; // You can style as needed\n\nconst App = () => {\n    const [weatherData, setWeatherData] = useState(null);\n    const [error, setError] = useState(null);\n\n    useEffect(() => {\n        const getWeatherData = async () => {\n            try {\n                const data = await fetchWeatherData();\n                setWeatherData(data);\n            } catch (error) {\n                setError(\"Could not fetch weather data\");\n            }\n        };\n\n        getWeatherData();\n        const intervalId = setInterval(getWeatherData, 300000); // Fetch data every 5 minutes\n\n        return () => clearInterval(intervalId); // Cleanup on unmount\n    }, []);\n\n    if (error) {\n        return <div className=\"error\">{error}</div>;\n    }\n\n    if (!weatherData) {\n        return <div>Loading...</div>;\n    }\n\n    const { weatherData: citiesData, processedData } = weatherData;\n\n    return (\n        <div className=\"app\">\n            <h1>Weather Monitoring System</h1>\n            <h2>Current Weather</h2>\n            <ul>\n                {citiesData.map((city, index) => (\n                    <li key={index}>\n                        <h3>{city.name}</h3>\n                        <p>Main Condition: {city.weather[0].description}</p>\n                        <p>Current Temperature: {Math.round(city.main.temp - 273.15)} °C</p>\n                        <p>Feels Like: {Math.round(city.main.feels_like - 273.15)} °C</p>\n                    </li>\n                ))}\n            </ul>\n            <h2>Daily Summary</h2>\n            <p>Average Temperature: {Math.round(processedData.averageTemperature)} °C</p>\n            <p>Max Temperature: {Math.round(processedData.maxTemperature)} °C</p>\n            <p>Min Temperature: {Math.round(processedData.minTemperature)} °C</p>\n            <p>Dominant Condition: {processedData.dominantCondition}</p>\n        </div>\n    );\n};\n\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}